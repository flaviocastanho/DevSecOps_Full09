name: Build, Test and Deploy

on:
  push:
    branches:
      - main
      
 permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3
      - name: Build (echo)
        run: npm run build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3
      - name: Instalar dependências
        run: npm install
      - name: Rodar testes
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3
      - name: Deploy para GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

# code-analisys:
#   runs-on: ubuntu-latest
#   needs: build
#   steps:
#   - uses: actions/checkout@v2
#     with:
#       fetch-depth: 0
#   - name: Set up JDK 11
#     uses: actions/setup-java@v1
#     with:
#       java-version: 11
#   - name: Cache SonarCloud packages
#   uses: actions/cache@v1
#   with:
#     path: ~/.sonar/cache
#     key: ${{ runner.os }}-sonar
#     restore-keys: ${{ runner.os }}-sonar
#   - name: Cache Maven packages
#     uses: actions/cache@v1
#     with:
#       path: ~/.m2
#       key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#       restore-keys: ${{ runner.os }}-m2
#   - name: Build and analyze
#   env:        
#   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PRinformation, if any
#   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#   run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey= seu projeto            